%{
#include<stdio.h>
#include<string.h>
#include<gmodule.h>

typedef struct entrada {
    char* titulo;
    char* ingles;
    char* espanhol;
    char* frances;
    char* italiano;
    char* russo;
    char* alemao;
}*DIC_ENTRADA;

int nova=0;
int tuplos;
GHashTable* h;
DIC_ENTRADA e;
long i;
int indice = 0;

void faztraducao(char* str, char* lang);
DIC_ENTRADA novaEntrada(char* tit){
    DIC_ENTRADA ent = malloc(sizeof(struct entrada));
    ent->titulo = strdup(tit);
    ent->alemao = NULL;
    ent->espanhol = NULL;
    ent->frances = NULL;
    ent->ingles = NULL;
    ent->italiano = NULL;
    ent->russo = NULL;
    return ent;
}

%}
%x F1 F2

%option yylineno
%option noyywrap

CP [ª|º|ñ|à|á|â|å|ã|ò|ó|ç|õ|é|è|ô|ō|ö|ê|ë|í|ì|ú|ü|ù|ß|Ø|Ú|Ù|Û|Ó|Ô|Ò|Ì|Î|Í|À|Â|Á|Ê|É|È]
PONTUACAO  [:|\/|!|\(|\)|\'|\,|\;|\.|\-|\?|\–|\-]
LETRAS [A-Za-z]
NUMEROS [0-9]
INTERESSA ({LETRAS}|{CP}|{PONTUACAO}|\ |{NUMEROS})

%%

<*>"<title>"                                          {BEGIN F1;}
<*>"-- MySQL"                                         {BEGIN F2;}
<F1>{
    ^"<title>"                                      {;}
    "</title>"                                     {;}
    "<id>"                                         {;}
    "</id>"                                        {;}
    "--"                                           {;}
    ^"<title>Wikipédia:"                           {;}
    ^"<title>Predefinição:"                        {;}
    ^"<title>Ficheiro:"                            {;}
    ^"<title>Categoria:"                           {;}
    ^"<title>Ajuda:"                               {;}
    {NUMEROS}+                                     {if (nova==1) {
                                                        g_hash_table_insert(h,GINT_TO_POINTER(atoi(yytext)),e);
                                                        nova=0;
                                                    }
                                                   }
    {INTERESSA}+                                   {e = novaEntrada(yytext);nova=1;}
    ({INTERESSA}|{NUMEROS})+                       {;}
    (.|\n)                                         {;}
}                                   

<F2>{
    ^"INSERT INTO `langlinks` VALUES "
    (\({NUMEROS},\'en\',\'{INTERESSA}+\'\)(,|;))?     {faztraducao(yytext+1,"en");}
    (\({NUMEROS},\'es\',\'{INTERESSA}+\'\)(,|;))?     {faztraducao(yytext+1,"es");}
    (\({NUMEROS},\'de\',\'{INTERESSA}+\'\)(,|;))?     {faztraducao(yytext+1,"de");}
    (\({NUMEROS},\'fr\',\'{INTERESSA}+\'\)(,|;))?     {faztraducao(yytext+1,"fr");}
    (\({NUMEROS},\'it\',\'{INTERESSA}+\'\)(,|;))?     {faztraducao(yytext+1,"it");}
    (\({NUMEROS},\'ru\',\'{INTERESSA}+\'\)(,|;))?     {faztraducao(yytext+1,"ru");}
    (.|\n)   				                       {;}
}
<*>.|\nova                                         {;}

%%
 
void retiraExcesso(char* str) {
    int j;
    for(j = indice; str[j]!='\0' ; j++) {
        if(str[j]==':') break;
    }
    if(str[j]!='\0') {
        j++;
        int i = indice+1;
        for(; str[j]!='\0' ; j++, i++)
            str[i] = str[j];
        str[i] = '\0';
    }
}

int getId(char* str) {
    int i = 0;
    for(; str[i]!=','; i++);
    indice = i;
    char* tmp = malloc(sizeof(char)*(i+1));
    strncpy(tmp,str,i);
    tmp[i] = '\0';
    i = atoi(tmp);
    free(tmp);
    return i;
}

char* getdados(char* str) {
    char* res = malloc(sizeof(char)*strlen(str+indice));
    strcpy(res,str+indice);
    return res;
}

void addLang(DIC_ENTRADA dic, char* lang, char* dados) {
    if(strcmp(lang,"de")==0) dic->alemao = strdup(dados);
    else if(strcmp(lang,"es")==0) dic->espanhol = strdup(dados);
    else if(strcmp(lang,"fr")==0) dic->frances = strdup(dados);
    else if(strcmp(lang,"en")==0) dic->ingles = strdup(dados);
    else if(strcmp(lang,"it")==0) dic->italiano = strdup(dados);
    else dic->russo = strdup(dados);
}

void faztraducao(char* str,char* lang) {
    if(tuplos!=0) {
        str[strlen(str)-2]='\0';
        int id = getId(str);
        indice+=5;
        retiraExcesso(str);
        char* dados = getdados(str);
        DIC_ENTRADA dic = (DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(id));
        if(dic != NULL) addLang(dic,lang,dados);
        tuplos--;
    }
}

void printDicionario(DIC_ENTRADA dic) {
    if(dic->alemao != NULL) printf("PT->%s ; DE->%s\n",dic->titulo,dic->alemao);
    if(dic->espanhol != NULL) printf("PT->%s ; ES->%s\n",dic->titulo,dic->espanhol);
    if(dic->frances != NULL) printf("PT->%s ; FR->%s\n",dic->titulo,dic->frances);
    if(dic->ingles != NULL) printf("PT->%s ; EN->%s\n",dic->titulo,dic->ingles);
    if(dic->italiano != NULL) printf("PT->%s ; IT->%s\n",dic->titulo,dic->italiano);
    if(dic->russo != NULL) printf("PT->%s ; RU->%s\n",dic->titulo,dic->russo);
}

int main(int argc,char* argv[]) {

    h = g_hash_table_new(g_direct_hash,g_direct_equal); 

    tuplos = atoi(argv[1]);
	printf("Inicio da filtragem\n");
	
    for(int i = 2; i< argc ; i++) {		
    	yyin=fopen(argv[i],"r");
        yylex();
        fclose(yyin);
        printf("FICHEIRO: %d\n",i-1);
    }
    printf("655 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(655)))->titulo); // Celula Animal
    printf("548 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(548)))->titulo); // Carvao Mineral
    printf("244 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(244)))->titulo); // 220-> Astronomia
    printf("436 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(436)))->titulo);
    printf("1735841 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(1735841)))->titulo);
    printf("3392287 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(3392287)))->titulo);
    printf("3392328 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(3392328)))->titulo);
    printf("3392284 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(3392284)))->titulo);
    printf("3391979 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(3391979)))->titulo);
    printf("516 -> %s\n",((DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(516)))->titulo);
    
	printf("Fim da filtragem\n");

    DIC_ENTRADA dic;
    for(int i = 0 ; i<50000 ; i++) {
        dic = (DIC_ENTRADA) g_hash_table_lookup(h,GINT_TO_POINTER(i));
        if(dic!=NULL) printDicionario(dic);
    }

	return 0;
}