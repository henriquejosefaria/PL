%{
#include<stdio.h>
#include<string.h>
#include "data-structs-master/include/dictionary.h"
#include "data-structs-master/src/dictionary.c"
#include "data-structs-master/include/htable.h"
#include "data-structs-master/src/htable.c"
TAD_HTABLE h;
char* frase;
int nova;
%}

%option yylineno
%option noyywrap

CP [A-Za-z: ªº/!ñàáâåãòóçõéèôōöêíìúüùß()',;\.ØÚÙÛÓÔÒÌÎÍÀÂÁÊÉÈ\\-]
LETRAS [A-Za-z\ |á|è|í|ó|ú|á|é|í|ó|ú|ã|õ|ç|ş]
ESPACO [\ ]
NUMEROS [0-9] 
PARAGRAFOS (\n)
LINGUA (de|en|fr|it|ru|es)

%%

"<title>".*:{LETRAS}+                               {int x = 0; 
                                                     while(yytext[x] != ':'){x++;} 
                                                     frase = (char*) malloc((strlen(yytext)-x+1)*sizeof(char));
                                                     sprintf(frase,"%s",yytext+x+1);
                                                     //frase[strlen(yytext)-x] = '\0';
                                                     //printf("%s\n",frase);
                                                     nova = 1;
                                                    }
"<title>"                                           {;}
"</title>\n"                                        {;}
"<id>"                                              {;}
"</id>\n"                                           {;}
"--\n"                                              {;}
"<title>".*{NUMEROS}+                              {;}
"<title>"{CP}+                                  {
                                                     int x = strlen(yytext)-6;
                                                     frase = (char*) malloc(x*sizeof(char));
                                                     sprintf(frase,"%s",yytext+7);
                                                     //frase[x] = '\0';
                                                     nova = 1;
                                                    }
"<id>"{NUMEROS}+                                    {
                                                     if(nova != 0){
                                                        int x = atoi(yytext+4);
                                                        add(frase,x,h,1);
                                                        free(frase);
                                                        //printf("vai fazer\n");
                                                        //getDados(h,x);
                                                        //printf("fez");
                                                     } 
                                                     nova=0;
                                                    }
(.|'\n')                                            {;}
%%


int main(int argc,char* argv[]) {
    h = Htable((long)1);
    nova = 0;
    printf("Inicio da filtragem\n");            
    yyin=fopen(argv[1],"r");
    yylex();
    fclose(yyin);

    printf("Fim da filtragem\n");
    printf("size = %ld\n",getHtableSize(h));

    return 0;
}
